from typing import Optional
import os

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ LlamaIndex –∫–ª–∏–µ–Ω—Ç
try:
    from utils.llama_client import LlamaIndexClient
    LLAMA_AVAILABLE = True
except ImportError:
    LLAMA_AVAILABLE = False

class ResearchTools:
    """–ü—Ä–æ—Å—Ç—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞—É—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
    
    def __init__(self):
        if LLAMA_AVAILABLE and os.getenv("LLAMA_INDEX_URL"):
            try:
                self.llama_client = LlamaIndexClient()
                self.use_llamaindex = True
                print("‚úÖ LlamaIndex –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LlamaIndex: {e}")
                self.use_llamaindex = False
        else:
            print("‚ùå LlamaIndex –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
            self.use_llamaindex = False
    
    def search_research(self, topic: str, detail_level: str = "detailed") -> str:
        """
        –ü–æ–∏—Å–∫ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ –ª—é–±–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ç–µ–º–µ.
        
        Args:
            topic: –¢–µ–º–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: "—Å—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å", "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ")
            detail_level: –£—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ ("basic", "detailed", "comprehensive")
        
        Returns:
            –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –Ω–∞—É—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º
        """
        
        if not self.use_llamaindex:
            return f"""
üîç **–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–º–µ: {topic}** (–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)

‚ö†Ô∏è **–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞**
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ ArXiv —Å—Ç–∞—Ç–µ–π –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.

–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ —Å—Ç–∞—Ç—å—è–º–∏.
"""
        
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
            top_k_map = {
                "basic": 10,
                "detailed": 20, 
                "comprehensive": 30
            }
            top_k = top_k_map.get(detail_level, 20)
            
            # –ú–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω—ã–π –ø–æ–∏—Å–∫ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
            queries = [
                f"{topic} –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑",
                f"{topic} –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –ø–æ–¥—Ö–æ–¥",
                f"{topic} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–≤–æ–¥—ã –ø—Ä–∞–∫—Ç–∏–∫–∞",
                f"{topic} –º–æ–¥–µ–ª—å —Ñ–æ—Ä–º—É–ª–∞ –∞–ª–≥–æ—Ä–∏—Ç–º",
                f"{topic} –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è"
            ]
            
            all_results = []
            all_sources = []
            
            for query in queries:
                result = self.llama_client.query(query, top_k=top_k//len(queries) + 5)
                
                if result.get("response") and not result.get("error"):
                    all_results.append(result["response"])
                    all_sources.extend(result.get("source_nodes", []))
            
            if not all_results:
                return f"‚ùå –ü–æ —Ç–µ–º–µ '{topic}' –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞."
            
            # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            unique_sources = []
            seen_titles = set()
            for source in all_sources:
                if hasattr(source, 'metadata'):
                    title = source.metadata.get('title', '')
                    if title and title not in seen_titles and len(title) > 10:
                        unique_sources.append(source)
                        seen_titles.add(title)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            combined_info = "\n\n".join(all_results)
            
            response = f"""
üìö **–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ: {topic.title()}**

## üîç –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—É—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏:

{combined_info}

## üìñ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π ({len(unique_sources)} —Å—Ç–∞—Ç–µ–π):
"""
            
            for i, source in enumerate(unique_sources[:15], 1):
                title = source.metadata.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç–∞—Ç—å—è')
                authors = source.metadata.get('authors', '')
                year = source.metadata.get('year', '')
                
                source_line = f"{i}. **{title}**"
                if authors:
                    source_line += f" - {authors}"
                if year:
                    source_line += f" ({year})"
                    
                response += f"\n{source_line}"
            
            response += f"\n\nüí° **–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ {len(unique_sources)} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π ArXiv**"
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: {str(e)}"
    
    def get_tools(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞"""
        try:
            from llama_index.core.tools import FunctionTool
            return [FunctionTool.from_defaults(self.search_research)]
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {e}")
            return []
